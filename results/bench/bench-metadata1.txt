monitor_event:restarting_runners
Runners were killed
Starting adder runner...
Starting nagini runner...
monitor_event:restarting_runners
Runners were killed
Starting adder runner...
Starting nagini runner...
monitor_event:restarting_runners
Runners were killed
Starting adder runner...
Starting nagini runner...
monitor_event:restarting_runners
Runners were killed
Starting adder runner...
Starting nagini runner...
monitor_event:restarting_runners
Runners were killed
Starting adder runner...
Starting nagini runner...
monitor_event:restarting_runners
Runners were killed
Starting adder runner...
Starting nagini runner...
monitor_event:restarting_runners
Runners were killed
Starting adder runner...
Starting nagini runner...
monitor_event:restarting_runners
Runners were killed
Starting adder runner...
Starting nagini runner...
monitor_event:restarting_runners
Runners were killed
Starting adder runner...
Starting nagini runner...
monitor_event:restarting_runners
Runners were killed
Starting adder runner...
Starting nagini runner...
monitor_event:restarting_runners
Runners were killed
Starting adder runner...
Starting nagini runner...
monitor_event:full_restart_triggered
Stopping Python processes...
Stopping Docker containers...
Stopping containers using port 27017...
1ae11ba1c20d
1ae11ba1c20d
Stopping containers using port 5672...
3d80a63eda1b
3d80a63eda1b
Stopping containers using port 5673...
a1a28b7c9817
a1a28b7c9817
Cleanup complete!
"docker stop" requires at least 1 argument.
See 'docker stop --help'.

Usage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]

Stop one or more running containers
"docker stop" requires at least 1 argument.
See 'docker stop --help'.

Usage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]

Stop one or more running containers
"docker stop" requires at least 1 argument.
See 'docker stop --help'.

Usage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]

Stop one or more running containers
Starting MongoDB...
4604767df1ee00936a003b191eca5be73167b11027c83e454c07a7b2d973826f
Starting RabbitMQ instance 1...
657bd437f0bce672ebe822c3a46e8d131748b072689a5a56fbbb0962ae8fa388
Starting RabbitMQ instance 2...
6e6a5743aed7c408e9d866758df1ec8de7e67c96f9c07d82ce080404a7054649
Waiting 10s for services to start up...
Starting adder service fuzzing...
Starting nagini service fuzzing...
Starting diff ivy generator...
Starting ivy verifier...
All processes started. Logs are being written to the logs/ directory.
You can monitor the logs with: ./scripts/check_output.sh
To stop the processes later, exit the shell or kill everything with ./scripts/kill_fuzzer.sh .
waiting for seed
